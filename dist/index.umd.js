(function(n,t){typeof exports=="object"&&typeof module<"u"?t(exports):typeof define=="function"&&define.amd?define(["exports"],t):(n=typeof globalThis<"u"?globalThis:n||self,t(n["signal-query"]={}))})(this,function(n){"use strict";var g=Object.defineProperty;var w=(n,t,d)=>t in n?g(n,t,{enumerable:!0,configurable:!0,writable:!0,value:d}):n[t]=d;var c=(n,t,d)=>w(n,typeof t!="symbol"?t+"":t,d);const f=class f{constructor(e){c(this,"_value");c(this,"listeners",new Set);this._value=e}track(){f.currentListener&&this.listeners.add(f.currentListener)}trigger(){this.listeners.forEach(e=>e())}get value(){return this.track(),this._value}set value(e){this._value!==e&&(this._value=e,this.trigger())}};c(f,"currentListener",null);let t=f;function d(m){const e=()=>{t.currentListener=e;try{m()}finally{t.currentListener=null}};e()}class E{constructor(e){c(this,"baseUrl");c(this,"defaultHeaders");c(this,"timeout");c(this,"cache");c(this,"tags");this.baseUrl=e.baseUrl,this.defaultHeaders=e.headers||{},this.timeout=e.timeout||5e3,this.cache=new Map,this.tags=new Map}static create(e){return new E(e)}buildUrlWithParams(e,r){if(!r)return e;const s=Object.entries(r).map(([i,o])=>`${encodeURIComponent(i)}=${encodeURIComponent(o)}`).join("&");return`${e}?${s}`}fetchData(e){const{method:r="GET",url:s,headers:i={},params:o,timeout:h,responseType:a}=e,l=this.buildUrlWithParams(`${this.baseUrl}${s}`,o),u=new XMLHttpRequest;return u.open(r,l,!0),Object.entries({...this.defaultHeaders,...i}).forEach(([v,p])=>{u.setRequestHeader(v,p)}),u.timeout=h||this.timeout,a&&(u.responseType=a==="stream"?"arraybuffer":a),u}get(e,r,s,i,o){const h=`${e}?${new URLSearchParams(r).toString()}`;if(!this.cache.has(h)){const a={isLoading:new t(!0),data:new t(null),error:new t(null),isSuccess:new t(!1),isError:new t(!1)};this.cache.set(h,a),o&&o.forEach(u=>{var v;this.tags.has(u)||this.tags.set(u,new Set),(v=this.tags.get(u))==null||v.add(h)});const l=this.fetchData({method:"GET",url:e,params:r,headers:s,responseType:i});l.onload=()=>{l.status>=200&&l.status<300?(a.isLoading.value=!1,a.isSuccess.value=!0,a.data.value=l.response):(a.isLoading.value=!1,a.isError.value=!0,a.error.value=new Error(`HTTP error! status: ${l.status}`))},l.onerror=()=>{a.isLoading.value=!1,a.isError.value=!0,a.error.value=new Error("Network error occurred")},l.ontimeout=()=>{a.isLoading.value=!1,a.isError.value=!0,a.error.value=new Error("Request timed out")},l.send()}return this.cache.get(h)}post(e,r,s,i){return this.request({method:"POST",url:e,data:r,headers:s,tags:i})}put(e,r,s,i){return this.request({method:"PUT",url:e,data:r,headers:s,tags:i})}delete(e,r,s,i){return this.request({method:"DELETE",url:e,params:r,headers:s,tags:i})}request(e){const r={isLoading:new t(!0),data:new t(null),error:new t(null),isSuccess:new t(!1),isError:new t(!1)},s=this.fetchData(e);return s.onload=()=>{s.status>=200&&s.status<300?(r.isLoading.value=!1,r.isSuccess.value=!0,r.data.value=s.response,e.tags&&this.revalidateTags(e.tags)):(r.isLoading.value=!1,r.isError.value=!0,r.error.value=new Error(`HTTP error! status: ${s.status}`))},s.onerror=()=>{r.isLoading.value=!1,r.isError.value=!0,r.error.value=new Error("Network error occurred")},s.ontimeout=()=>{r.isLoading.value=!1,r.isError.value=!0,r.error.value=new Error("Request timed out")},s.send(e.data?JSON.stringify(e.data):void 0),r}revalidateTags(e){e.forEach(r=>{const s=this.tags.get(r);s&&s.forEach(i=>{const o=this.cache.get(i);if(o){const[h,a]=i.split("?"),l=this.getParams(a),u=this.fetchData({method:"GET",url:h,params:l});u.onload=()=>{u.status>=200&&u.status<300?(o.data.value=u.response,o.isSuccess.value=!0,o.isError.value=!1,o.error.value=null):(o.isError.value=!0,o.error.value=new Error(`HTTP error! status: ${u.status}`))},u.onerror=()=>{o.isError.value=!0,o.error.value=new Error("Network error occurred")},u.send()}})})}getParams(e){const r={};return e&&e.split("&").forEach(s=>{const[i,o]=s.split("=");r[decodeURIComponent(i)]=decodeURIComponent(o)}),r}}n.SignalQuery=E,n.createEffect=d,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=index.umd.js.map
